{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "iteration": 1614023490674,
  "links": [],
  "panels": [
    {
      "datasource": "teslalogger",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null,
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "StartDate"
            },
            "properties": [
              {
                "id": "unit",
                "value": "dateTimeAsLocal"
              },
              {
                "id": "custom.width",
                "value": 152
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Action"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "kWh"
            },
            "properties": [
              {
                "id": "decimals",
                "value": 1
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "RangeDiff"
            },
            "properties": [
              {
                "id": "decimals",
                "value": 0
              },
              {
                "id": "displayName",
                "value": "Range Diff"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "MinuteDiff"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 61
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Start_address"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 307
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "odometer"
            },
            "properties": [
              {
                "id": "decimals",
                "value": 1
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 22,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "StartDate"
          }
        ]
      },
      "pluginVersion": "7.2.0",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT UNIX_TIMESTAMP(StartDate)*1000 as StartDate, '🚗 Drive' as Action,\r\n    TIMESTAMPDIFF(MINUTE, StartDate, EndDate) as MinuteDiff,\r\n    Start_address, End_address,\r\n    TP1.odometer as odometer,\r\n    consumption_kWh *-1 as kWh,\r\n    km_diff, (StartRange - EndRange) * -1 as RangeDiff,\r\n    TP1.battery_level as SOC, TP2.battery_level-TP1.battery_level as SOC_Diff,\r\n    outside_temp_avg\r\nfrom trip\r\n\tleft outer join pos as TP1 on trip.StartPosId = TP1.id\r\n    left outer Join pos as TP2 on trip.EndPosId = TP2.id\r\nWHERE \r\n  $__timeFilter(trip.StartDate) and km_diff < 1000 and trip.CarID = $Car \r\n\r\nunion\r\nSELECT UNIX_TIMESTAMP(chargingstate.StartDate)*1000 as StartDate, '🔋 Charging' as Action,\r\n    TIMESTAMPDIFF(MINUTE, chargingstate.StartDate, chargingstate.EndDate) as MinuteDiff,\r\n    pos.address as Start_address, '' as End_address, \r\n    pos.odometer as odometer,\r\n    charging_End.charge_energy_added as kWh, \r\n    null as km_diff,\r\n    charging_End.ideal_battery_range_km - charging.ideal_battery_range_km as RangeDiff, \r\n    charging.battery_level as SOC, charging_End.battery_level - charging.battery_level as SOC_Diff,\r\n    null as outside_temp_avg\r\nFROM charging inner JOIN chargingstate ON charging.id = chargingstate.StartChargingID INNER JOIN\r\n    pos ON chargingstate.pos = pos.id\r\n    LEFT OUTER JOIN\r\n    charging AS charging_End ON chargingstate.EndChargingID = charging_End.id\r\n    join cars on cars.id = chargingstate.carid\r\nwhere $__timeFilter(chargingstate.StartDate) and chargingstate.CarID = $Car \r\nunion\r\nSELECT\r\n    UNIX_TIMESTAMP(T1.EndDate) * 1000 as StartDate, '🅿️ Parking' as Action,\r\n    TIMESTAMPDIFF(MINUTE, T1.EndDate, T2.StartDate) as MinuteDiff,\r\n    TP1.address as Start_address, '' as End_address,\r\n    TP1.odometer as odometer,\r\n    (TP1.ideal_battery_range_km - (TP2.ideal_battery_range_km + (TP2.odometer - TP1.odometer))) * wh_tr * -1 as kWh, null as km_diff,\r\n    (TP1.ideal_battery_range_km - (TP2.ideal_battery_range_km + (TP2.odometer - TP1.odometer))) * -1 as RangeDiff,\r\n    TP1.battery_level as SOC, TP2.battery_level-TP1.battery_level as SOC_Diff,\r\n    null as outside_temp_avg\r\nFROM\r\n    drivestate as T1\r\n    left outer join drivestate as T2 on T1.id + 1 = T2.id\r\n    left outer Join pos as TP1 on T1.EndPos = TP1.id\r\n    left outer join pos as TP2 on T2.StartPos = TP2.id\r\n    JOIN cars ON cars.id = T2.CarID\r\nwhere\r\n    $__timeFilter(T1.EndDate) and T1.carid=$Car \r\n    and TP1.ideal_battery_range_km - TP2.ideal_battery_range_km >= 0\r\n    and TP2.carid=$Car \r\n    and TP1.carid=$Car \r\nunion\r\n\r\nSELECT\r\n    UNIX_TIMESTAMP(T2.StartDate) * 1000 - 1 as StartDate,\r\n    '❓ Missing' as Action,\r\n    null as MinuteDiff,\r\n    TP1.address as Start_address, TP2.address as End_address,\r\n    TP1.odometer as odometer,\r\n    null as kWh, TP2.odometer - TP1.odometer as km_diff,\r\n    null as RangeDiff,\r\n    null as SOC, null as SOC_Diff,\r\n    null as outside_temp_avg\r\nFROM\r\n    drivestate as T1\r\n    left outer join drivestate as T2 on T1.id + 1 = T2.id\r\n    left outer Join pos as TP1 on T1.EndPos = TP1.id\r\n    left outer join pos as TP2 on T2.StartPos = TP2.id\r\nwhere\r\n    $__timeFilter(T1.EndDate) and T1.carid=$Car \r\n    and TP2.carid=$Car \r\n    and TP1.carid=$Car \r\n    and TP2.odometer - TP1.odometer > 0.5\r\n    \r\n    union\r\n\r\nSELECT UNIX_TIMESTAMP(StartDate)*1000 as StartDate, \r\n\t'💾 Update' as Action,\r\n    null as MinuteDiff,\r\n    version as Start_address, null End_address,\r\n    null as odometer,\r\n    null as kWh,     null as km_diff, \r\n\tnull as RangeDiff,\r\n    null as SOC, null as SOC_Diff,\r\n    null as outside_temp_avg\r\nfrom car_version\r\nWHERE \r\n  $__timeFilter(StartDate) and CarID = $Car \r\n    \r\n    \r\norder by StartDate desc\r\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "candata",
          "timeColumn": "datum",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Timeline",
      "type": "table"
    }
  ],
  "schemaVersion": 26,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "Olaf",
          "value": "1"
        },
        "datasource": "teslalogger",
        "definition": "select display_name as __text, id as __value from cars where length(vin) > 5 order by display_name",
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "Car",
        "options": [],
        "query": "select display_name as __text, id as __value from cars where length(vin) > 5 order by display_name",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-90d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Timeline",
  "uid": "SUBgwtigz",
  "version": 2
}
