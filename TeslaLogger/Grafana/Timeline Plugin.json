{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "iteration": 1624026245781,
  "links": [],
  "panels": [
    {
      "datasource": "teslalogger",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "gridPos": {
        "h": 21,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "seriesCountSize": "sm",
        "showSeriesCount": false,
        "text": "Default value of text input option"
      },
      "pluginVersion": "7.2.0",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT UNIX_TIMESTAMP(StartDate)*1000 as StartDate, UNIX_TIMESTAMP(EndDate)*1000 as EndDate, 'Driving' as Action,\r\n    TIMESTAMPDIFF(MINUTE, StartDate, EndDate) as MinuteDiff,\r\n    Start_address, End_address,\r\n    TP1.odometer as odometer,\r\n    consumption_kWh as kWh,\r\n    km_diff, (StartRange - EndRange) as RangeDiff,\r\n    TP1.battery_level as SOC, TP1.battery_level-TP2.battery_level as SOC_Diff,\r\n    outside_temp_avg,\r\n    null as distance,\r\n    trip.StartPosId as startposid, trip.EndPosId as endposid,\r\n    TP1.lat as StartLat,TP1.lng as StartLng,\r\n    null as cost, null as csid, null as currency,\r\n    TP2.odometer as odometerEnd,\r\n    speed_max, null as max_charger_power,\r\n    null as sleephours\r\nfrom trip\r\n\tleft outer join pos as TP1 on trip.StartPosId = TP1.id\r\n    left outer Join pos as TP2 on trip.EndPosId = TP2.id\r\nWHERE '1' in ($ACTION) and\r\n  $__timeFilter(trip.StartDate) and km_diff < 1000 and trip.CarID = $Car and TIMESTAMPDIFF(MINUTE, StartDate, EndDate) > 0\r\n  and (Start_address like '%$Textfilter%' or End_address like '%$Textfilter%')\r\n\r\nunion\r\nSELECT UNIX_TIMESTAMP(chargingstate.StartDate)*1000 as StartDate, UNIX_TIMESTAMP(chargingstate.EndDate)*1000 as EndDate,'Charging' as Action,\r\n    TIMESTAMPDIFF(MINUTE, chargingstate.StartDate, chargingstate.EndDate) as MinuteDiff,\r\n    pos.address as Start_address, '' as End_address, \r\n    pos.odometer as odometer,\r\n    chargingstate.charge_energy_added as kWh, \r\n    null as km_diff,\r\n    charging_End.ideal_battery_range_km - charging.ideal_battery_range_km as RangeDiff, \r\n    charging.battery_level as SOC, charging_End.battery_level - charging.battery_level as SOC_Diff,\r\n    null as outside_temp_avg,\r\n    null as distance,\r\n    null as startposid, null as endposid,\r\n    pos.lat as StartLat,pos.lng as StartLng,\r\n    cost_total as cost, chargingstate.id as csid, cost_currency as currency,\r\n    null as odometerEnd,\r\n    null as speed_max, max_charger_power,\r\n    null as sleephours\r\nFROM charging inner JOIN chargingstate ON charging.id = chargingstate.StartChargingID INNER JOIN\r\n    pos ON chargingstate.pos = pos.id\r\n    LEFT OUTER JOIN\r\n    charging AS charging_End ON chargingstate.EndChargingID = charging_End.id\r\n    join cars on cars.id = chargingstate.carid\r\nWHERE '2' in ($ACTION) and \r\n$__timeFilter(chargingstate.StartDate) and chargingstate.CarID = $Car and TIMESTAMPDIFF(MINUTE, StartDate, EndDate) > 0\r\nand (pos.address like '%$Textfilter%')\r\n  \r\nunion\r\nSELECT\r\n    UNIX_TIMESTAMP(T1.EndDate) * 1000 as StartDate, UNIX_TIMESTAMP(T2.StartDate) * 1000 as EndDate,'Parking' as Action,\r\n    TIMESTAMPDIFF(MINUTE, T1.EndDate, T2.StartDate) as MinuteDiff,\r\n    TP1.address as Start_address, '' as End_address,\r\n    TP1.odometer as odometer,\r\n    (TP1.ideal_battery_range_km - (TP2.ideal_battery_range_km + (TP2.odometer - TP1.odometer))) * wh_tr as kWh, null as km_diff,\r\n    (TP1.ideal_battery_range_km - (TP2.ideal_battery_range_km + (TP2.odometer - TP1.odometer))) as RangeDiff,\r\n    TP1.battery_level as SOC, TP2.battery_level-TP1.battery_level as SOC_Diff,\r\n    null as outside_temp_avg,\r\n    null as distance,\r\n    null as startposid, null as endposid,\r\n    TP1.lat as StartLat,TP1.lng as StartLng,\r\n    null as cost, null as csid, null as currency,\r\n    null as odometerEnd,\r\n    null as speed_max, null as max_charger_power,\r\n    (\r\n        SELECT\r\n            sum(TIMESTAMPDIFF(MINUTE, StartDate, EndDate) )\r\n        FROM\r\n            state\r\n        where\r\n            (state = 'asleep' or state = 'offline')\r\n            and StartDate >= T1.EndDate\r\n            and EndDate <= T2.StartDate\r\n            and EndDate > StartDate\r\n            and carid=$Car \r\n    ) as sleephours\r\nFROM\r\n    (select (@rowid1:=@rowid1 + 1) T1rid, drivestate.* from drivestate\r\n      where $__timeFilter(EndDate) and carid=$Car and carid=$Car \r\n    ) as T1\r\n    left outer join \r\n    (select (@rowid2:=@rowid2 + 1) T2rid, drivestate.* from  drivestate\r\n      where $__timeFilter(EndDate) and carid=$Car and carid=$Car \r\n    ) as T2 on T1.T1rid + 1 = T2.T2rid\r\n    left outer Join pos as TP1 on T1.EndPos = TP1.id\r\n    left outer join pos as TP2 on T2.StartPos = TP2.id\r\n    JOIN cars ON cars.id = T2.CarID\r\n    JOIN (SELECT @rowid1:=0) a\r\n    JOIN (SELECT @rowid2:=0) b\r\nWHERE '3' in ($ACTION)\r\n    and TIMESTAMPDIFF(MINUTE, T1.EndDate, T2.StartDate) > 0\r\n    and (TP1.address like '%$Textfilter%')\r\nunion\r\n\r\nSELECT\r\n    UNIX_TIMESTAMP(T2.StartDate) * 1000 - 1 as StartDate, null as EndDate, 'Missing' as Action,\r\n    null as MinuteDiff,\r\n    TP1.address as Start_address, TP2.address as End_address,\r\n    TP1.odometer as odometer,\r\n    null as kWh, TP2.odometer - TP1.odometer as km_diff,\r\n    null as RangeDiff,\r\n    null as SOC, null as SOC_Diff,\r\n    null as outside_temp_avg,\r\n    TP2.odometer - TP1.odometer as distance,\r\n    null as startposid, null as endposid,\r\n    null as StartLat,null as StartLng,\r\n    null as cost, null as csid, null as currency,\r\n    null as odometerEnd,\r\n    null as speed_max, null as max_charger_power,\r\n    null as sleephours\r\nFROM\r\n    (select (@rowid1:=@rowid1 + 1) T1rid, drivestate.* from drivestate\r\n      where $__timeFilter(EndDate) and carid=$Car and carid=$Car \r\n    ) as T1\r\n    left outer join \r\n    (select (@rowid2:=@rowid2 + 1) T2rid, drivestate.* from  drivestate\r\n      where $__timeFilter(EndDate) and carid=$Car and carid=$Car \r\n    ) as T2 on T1.T1rid + 1 = T2.T2rid\r\n    left outer Join pos as TP1 on T1.EndPos = TP1.id\r\n    left outer join pos as TP2 on T2.StartPos = TP2.id\r\n    JOIN (SELECT @rowid1:=0) a\r\n    JOIN (SELECT @rowid2:=0) b\r\nWHERE '4' in ($ACTION) \r\n    and TP2.odometer - TP1.odometer > 0.5\r\n    and (TP1.address like '%$Textfilter%')\r\n\r\nUNION\r\n    \r\nSELECT UNIX_TIMESTAMP(StartDate)*1000 as StartDate, null as EndDate, 'Update' as Action,\r\n    null as MinuteDiff,\r\n    version as Start_address, null End_address,\r\n    null as odometer,\r\n    null as kWh,\r\n    null as km_diff, null as RangeDiff,\r\n    null as SOC, null as SOC_Diff,\r\n    null as outside_temp_avg,\r\n    null as distance,\r\n    null as startposid, null as endposid,\r\n    null as StartLat,null as StartLng,\r\n    null as cost, null as csid, null as currency,\r\n    null as odometerEnd,\r\n    null as speed_max, null as max_charger_power,\r\n    null as sleephours\r\nfrom car_version\r\nWHERE '5' in ($ACTION) and\r\n  $__timeFilter(StartDate) and CarID = $Car \r\n    \r\norder by StartDate desc\r\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "candata",
          "timeColumn": "datum",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Timeline",
      "transparent": true,
      "type": "teslalogger-timeline-panel"
    }
  ],
  "schemaVersion": 26,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "",
          "value": "1"
        },
        "datasource": "teslalogger",
        "definition": "select display_name as __text, id as __value from cars where length(vin) > 5 order by display_name",
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "Car",
        "options": [],
        "query": "select display_name as __text, id as __value from cars where length(vin) > 5 order by display_name",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "tags": [],
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": "teslalogger",
        "definition": "select 'Driving' as __text, 1 as __value\nunion select 'Charging' as __text, 2 as __value\nunion select 'Parking' as __text, 3 as __value\nunion select 'Missing' as __text, 4 as __value\nunion select 'Update' as __text, 5 as __value",
        "hide": 0,
        "includeAll": true,
        "label": "Action",
        "multi": true,
        "name": "ACTION",
        "options": [],
        "query": "select 'Driving' as __text, 1 as __value\nunion select 'Charging' as __text, 2 as __value\nunion select 'Parking' as __text, 3 as __value\nunion select 'Missing' as __text, 4 as __value\nunion select 'Update' as __text, 5 as __value",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "",
          "value": ""
        },
        "hide": 0,
        "label": "Textfilter",
        "name": "Textfilter",
        "options": [
          {
            "selected": true,
            "text": "",
            "value": ""
          }
        ],
        "query": "",
        "skipUrlSync": false,
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Timeline Plugin",
  "uid": "JhRusymgk",
  "version": 43
}